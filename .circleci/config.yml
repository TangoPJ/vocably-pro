version: 2.1
main_only: &main_only
  filters:
    branches:
      only: main

new_version_only: &new_version_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v\d+\.\d+\.\d+$/

commands:
  install_npm_dependencies:
    steps:
      - run:
          name: Set NPM cache folder
          command: npm set cache .npm
      - restore_cache:
          name: Restore NPM cache
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          name: Save NPM Cache
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - .npm

jobs:
  bumpNewVersion:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.14
    environment:
      ENV_NAME: DEV
    steps:
      - checkout
      - install_npm_dependencies
      - run: npx zx ./scripts/build-packages.mjs
      - run: npm run test -ws
      - run: bash ./scripts/install-build-depdendencies.sh
      - run: bash ./scripts/declare-variables.sh
      - run: bash ./scripts/run-terraform.sh
      - run: npm run test -ws
      - run: npx semantic-release
      - run: npx zx ./scripts/build-extension.mjs
  stage:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.14
    environment:
      ENV_NAME: STAGE
    steps:
      - checkout
      - install_npm_dependencies
      - run: npx zx ./scripts/build-packages.mjs
      - run: npm run test -ws
      - run: bash ./scripts/install-build-depdendencies.sh
      - run: bash ./scripts/declare-variables.sh
      - run: bash ./scripts/run-terraform.sh
  prod:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.14
    environment:
      ENV_NAME: PROD
    steps:
      - checkout
      - install_npm_dependencies
      - run: npx zx ./scripts/build-packages.mjs
      - run: npm run test -ws
      - run: bash ./scripts/install-build-depdendencies.sh
      - run: bash ./scripts/declare-variables.sh
      - run: bash ./scripts/run-terraform.sh
workflows:
  version: 2
  bumpNewVersion:
    jobs:
      - bumpNewVersion:
          <<: *main_only
  deploy:
    jobs:
      - stage:
          <<: *new_version_only
      - manual-testing:
          <<: *new_version_only
          type: approval
          requires:
            - stage
      - prod:
          <<: *new_version_only
          requires:
            - manual-testing
